{
    "tool_definitions": [
        {
            "name": "search_data_source",
            "description": "Query and retrieve records from various data sources with filtering and field selection capabilities",
            "parameters": {
                "type": "object",
                "properties": {
                    "source_type": {
                        "type": "string",
                        "enum": [
                            "gmail",
                            "google_drive",
                            "database",
                            "api",
                            "file",
                            "slack",
                            "notion"
                        ],
                        "description": "The type of data source to query"
                    },
                    "query_criteria": {
                        "type": "object",
                        "description": "Source-specific filtering criteria",
                        "properties": {
                            "folder": {
                                "type": "string"
                            },
                            "labels": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "sender": {
                                "type": "string"
                            },
                            "subject_contains": {
                                "type": "string"
                            },
                            "full_text_search": {
                                "type": "string"
                            },
                            "custom_filters": {
                                "type": "object"
                            }
                        }
                    },
                    "date_range": {
                        "type": "object",
                        "properties": {
                            "start_date": {
                                "type": "string",
                                "format": "date"
                            },
                            "end_date": {
                                "type": "string",
                                "format": "date"
                            }
                        }
                    },
                    "limit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000,
                        "description": "Maximum number of records to retrieve"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specific fields to retrieve from each record"
                    },
                    "output_asset_name": {
                        "type": "string",
                        "description": "Name for the output asset in the workflow"
                    }
                },
                "required": [
                    "source_type",
                    "output_asset_name"
                ]
            }
        },
        {
            "name": "extract_from_record",
            "description": "Apply extraction logic to individual records using various methods including LLM analysis",
            "parameters": {
                "type": "object",
                "properties": {
                    "input_asset_name": {
                        "type": "string",
                        "description": "Name of the input asset containing records to process"
                    },
                    "extraction_schema": {
                        "type": "object",
                        "description": "Defines what to extract from each record",
                        "patternProperties": {
                            ".*": {
                                "type": "string",
                                "description": "Field name mapped to extraction instruction"
                            }
                        }
                    },
                    "extraction_method": {
                        "type": "string",
                        "enum": [
                            "llm_prompt",
                            "regex",
                            "json_path",
                            "api_call",
                            "custom_function"
                        ],
                        "description": "Method to use for extraction"
                    },
                    "extraction_prompt": {
                        "type": "string",
                        "description": "Prompt template for LLM-based extraction (required if method is llm_prompt)"
                    },
                    "output_field_name": {
                        "type": "string",
                        "description": "Name of the field to add to each record containing extraction results"
                    },
                    "batch_size": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100,
                        "default": 10,
                        "description": "Number of records to process in each batch"
                    },
                    "error_handling": {
                        "type": "string",
                        "enum": [
                            "skip",
                            "fail",
                            "default_value"
                        ],
                        "default": "skip",
                        "description": "How to handle extraction errors"
                    },
                    "output_asset_name": {
                        "type": "string",
                        "description": "Name for the output asset containing enriched records"
                    }
                },
                "required": [
                    "input_asset_name",
                    "extraction_schema",
                    "extraction_method",
                    "output_field_name",
                    "output_asset_name"
                ]
            }
        },
        {
            "name": "enrich_records",
            "description": "Add computed properties and metadata to existing records",
            "parameters": {
                "type": "object",
                "properties": {
                    "input_asset_name": {
                        "type": "string",
                        "description": "Name of the input asset containing records to enrich"
                    },
                    "enrichment_rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field_name": {
                                    "type": "string"
                                },
                                "computation_logic": {
                                    "type": "string"
                                },
                                "computation_type": {
                                    "type": "string",
                                    "enum": [
                                        "timestamp",
                                        "hash",
                                        "uuid",
                                        "computed_field",
                                        "lookup",
                                        "conditional"
                                    ]
                                },
                                "parameters": {
                                    "type": "object"
                                }
                            },
                            "required": [
                                "field_name",
                                "computation_logic",
                                "computation_type"
                            ]
                        }
                    },
                    "preserve_original": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to keep original fields in output"
                    },
                    "output_asset_name": {
                        "type": "string",
                        "description": "Name for the output asset containing enriched records"
                    }
                },
                "required": [
                    "input_asset_name",
                    "enrichment_rules",
                    "output_asset_name"
                ]
            }
        },
        {
            "name": "store_in_database",
            "description": "Persist data to various storage systems with schema validation and indexing",
            "parameters": {
                "type": "object",
                "properties": {
                    "input_asset_name": {
                        "type": "string",
                        "description": "Name of the input asset containing data to store"
                    },
                    "storage_type": {
                        "type": "string",
                        "enum": [
                            "object_db",
                            "relational_db",
                            "file",
                            "memory",
                            "cloud_storage"
                        ],
                        "description": "Type of storage system to use"
                    },
                    "collection_name": {
                        "type": "string",
                        "description": "Name of the collection/table/file to store data in"
                    },
                    "storage_config": {
                        "type": "object",
                        "properties": {
                            "connection_string": {
                                "type": "string"
                            },
                            "file_path": {
                                "type": "string"
                            },
                            "file_format": {
                                "type": "string",
                                "enum": [
                                    "json",
                                    "csv",
                                    "parquet",
                                    "xlsx"
                                ]
                            },
                            "cloud_bucket": {
                                "type": "string"
                            }
                        }
                    },
                    "schema_validation": {
                        "type": "object",
                        "description": "JSON schema to validate data before storage"
                    },
                    "upsert_key": {
                        "type": "string",
                        "description": "Field to use for upsert operations (updates existing records)"
                    },
                    "indexing_rules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Fields to create indexes on for faster querying"
                    },
                    "output_asset_name": {
                        "type": "string",
                        "description": "Name for the output asset containing storage confirmation"
                    }
                },
                "required": [
                    "input_asset_name",
                    "storage_type",
                    "collection_name",
                    "output_asset_name"
                ]
            }
        },
        {
            "name": "group_by_reduce",
            "description": "Group records by specified criteria and apply aggregation functions",
            "parameters": {
                "type": "object",
                "properties": {
                    "input_asset_name": {
                        "type": "string",
                        "description": "Name of the input asset containing records to aggregate"
                    },
                    "group_by_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Fields or expressions to group by (e.g., 'date(timestamp)', 'sender')"
                    },
                    "aggregation_functions": {
                        "type": "object",
                        "description": "Output field names mapped to aggregation expressions",
                        "patternProperties": {
                            ".*": {
                                "type": "string",
                                "description": "Aggregation function like 'count(*)', 'avg(field)', 'sum(field)', 'collect(field)'"
                            }
                        }
                    },
                    "filter_criteria": {
                        "type": "object",
                        "description": "Optional filtering before aggregation"
                    },
                    "sort_order": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "direction": {
                                    "type": "string",
                                    "enum": [
                                        "asc",
                                        "desc"
                                    ]
                                }
                            },
                            "required": [
                                "field",
                                "direction"
                            ]
                        }
                    },
                    "having_criteria": {
                        "type": "object",
                        "description": "Filtering criteria applied after aggregation"
                    },
                    "output_asset_name": {
                        "type": "string",
                        "description": "Name for the output asset containing aggregated results"
                    }
                },
                "required": [
                    "input_asset_name",
                    "group_by_fields",
                    "aggregation_functions",
                    "output_asset_name"
                ]
            }
        },
        {
            "name": "filter_records",
            "description": "Filter records based on specified criteria and conditions",
            "parameters": {
                "type": "object",
                "properties": {
                    "input_asset_name": {
                        "type": "string",
                        "description": "Name of the input asset containing records to filter"
                    },
                    "filter_conditions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "operator": {
                                    "type": "string",
                                    "enum": [
                                        "equals",
                                        "not_equals",
                                        "greater_than",
                                        "less_than",
                                        "contains",
                                        "not_contains",
                                        "in",
                                        "not_in",
                                        "regex",
                                        "exists",
                                        "not_exists"
                                    ]
                                },
                                "value": {},
                                "logical_operator": {
                                    "type": "string",
                                    "enum": [
                                        "and",
                                        "or"
                                    ],
                                    "default": "and"
                                }
                            },
                            "required": [
                                "field",
                                "operator",
                                "value"
                            ]
                        }
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Maximum number of records to return"
                    },
                    "output_asset_name": {
                        "type": "string",
                        "description": "Name for the output asset containing filtered records"
                    }
                },
                "required": [
                    "input_asset_name",
                    "filter_conditions",
                    "output_asset_name"
                ]
            }
        },
        {
            "name": "transform_records",
            "description": "Apply transformations to record fields and structure",
            "parameters": {
                "type": "object",
                "properties": {
                    "input_asset_name": {
                        "type": "string",
                        "description": "Name of the input asset containing records to transform"
                    },
                    "transformations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "rename_field",
                                        "compute_field",
                                        "format_field",
                                        "split_field",
                                        "merge_fields",
                                        "convert_type"
                                    ]
                                },
                                "source_fields": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "target_field": {
                                    "type": "string"
                                },
                                "transformation_logic": {
                                    "type": "string"
                                },
                                "parameters": {
                                    "type": "object"
                                }
                            },
                            "required": [
                                "type",
                                "target_field"
                            ]
                        }
                    },
                    "output_format": {
                        "type": "string",
                        "enum": [
                            "preserve",
                            "flatten",
                            "normalize",
                            "pivot"
                        ],
                        "default": "preserve",
                        "description": "How to structure the output records"
                    },
                    "output_asset_name": {
                        "type": "string",
                        "description": "Name for the output asset containing transformed records"
                    }
                },
                "required": [
                    "input_asset_name",
                    "transformations",
                    "output_asset_name"
                ]
            }
        },
        {
            "name": "validate_records",
            "description": "Validate records against schema and business rules",
            "parameters": {
                "type": "object",
                "properties": {
                    "input_asset_name": {
                        "type": "string",
                        "description": "Name of the input asset containing records to validate"
                    },
                    "validation_schema": {
                        "type": "object",
                        "description": "JSON schema for record validation"
                    },
                    "business_rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rule_name": {
                                    "type": "string"
                                },
                                "condition": {
                                    "type": "string"
                                },
                                "error_message": {
                                    "type": "string"
                                },
                                "severity": {
                                    "type": "string",
                                    "enum": [
                                        "error",
                                        "warning",
                                        "info"
                                    ]
                                }
                            },
                            "required": [
                                "rule_name",
                                "condition",
                                "severity"
                            ]
                        }
                    },
                    "validation_mode": {
                        "type": "string",
                        "enum": [
                            "strict",
                            "lenient",
                            "report_only"
                        ],
                        "default": "strict",
                        "description": "How to handle validation failures"
                    },
                    "output_asset_name": {
                        "type": "string",
                        "description": "Name for the output asset containing validation results"
                    }
                },
                "required": [
                    "input_asset_name",
                    "output_asset_name"
                ]
            }
        }
    ],
    "workflow_orchestration": {
        "execute_workflow": {
            "name": "execute_workflow",
            "description": "Execute a complete workflow composed of multiple tool calls in sequence",
            "parameters": {
                "type": "object",
                "properties": {
                    "workflow_definition": {
                        "type": "object",
                        "properties": {
                            "workflow_id": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "stages": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "stage_name": {
                                            "type": "string"
                                        },
                                        "steps": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tool_name": {
                                                        "type": "string"
                                                    },
                                                    "parameters": {
                                                        "type": "object"
                                                    },
                                                    "depends_on": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "parallel": {
                                                        "type": "boolean",
                                                        "default": false
                                                    }
                                                },
                                                "required": [
                                                    "tool_name",
                                                    "parameters"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "stage_name",
                                        "steps"
                                    ]
                                }
                            },
                            "error_handling": {
                                "type": "object",
                                "properties": {
                                    "on_step_failure": {
                                        "type": "string",
                                        "enum": [
                                            "stop",
                                            "continue",
                                            "retry"
                                        ]
                                    },
                                    "max_retries": {
                                        "type": "integer",
                                        "default": 3
                                    },
                                    "rollback_on_failure": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        "required": [
                            "workflow_id",
                            "stages"
                        ]
                    },
                    "initial_assets": {
                        "type": "object",
                        "description": "Initial assets to make available to the workflow"
                    },
                    "execution_mode": {
                        "type": "string",
                        "enum": [
                            "sequential",
                            "parallel_where_possible",
                            "user_guided"
                        ],
                        "default": "sequential"
                    }
                },
                "required": [
                    "workflow_definition"
                ]
            }
        }
    },
    "asset_management": {
        "list_assets": {
            "name": "list_assets",
            "description": "List all available assets in the current workflow context",
            "parameters": {
                "type": "object",
                "properties": {
                    "filter_by_type": {
                        "type": "string"
                    },
                    "filter_by_tag": {
                        "type": "string"
                    },
                    "include_metadata": {
                        "type": "boolean",
                        "default": true
                    }
                }
            }
        },
        "get_asset": {
            "name": "get_asset",
            "description": "Retrieve a specific asset by name",
            "parameters": {
                "type": "object",
                "properties": {
                    "asset_name": {
                        "type": "string"
                    },
                    "include_content": {
                        "type": "boolean",
                        "default": true
                    },
                    "format": {
                        "type": "string",
                        "enum": [
                            "raw",
                            "preview",
                            "metadata_only"
                        ]
                    }
                },
                "required": [
                    "asset_name"
                ]
            }
        },
        "create_asset": {
            "name": "create_asset",
            "description": "Create a new asset in the workflow context",
            "parameters": {
                "type": "object",
                "properties": {
                    "asset_name": {
                        "type": "string"
                    },
                    "asset_type": {
                        "type": "string"
                    },
                    "content": {},
                    "metadata": {
                        "type": "object"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "asset_name",
                    "asset_type",
                    "content"
                ]
            }
        }
    }
}